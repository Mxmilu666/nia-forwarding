name: Build Multi-Platform Binaries

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          OUTPUT_NAME=nia-forwarding-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi

          go build -v -o "${OUTPUT_NAME}" -ldflags="-s -w" .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nia-forwarding-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            nia-forwarding-${{ matrix.goos }}-${{ matrix.goarch }}*
          retention-days: 5

  # 创建 GitHub Release
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./**/*
          generate_release_notes: true
